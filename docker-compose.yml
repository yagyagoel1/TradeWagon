version: '1.0'

services:
  app:
    container_name: product-selling-platform-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/productdb
      - S3_BUCKET_NAME=your-s3-bucket-name
      - CLOUDINARY_URL=your-cloudinary-url
      - BULLMQ_REDIS_URL=redis://redis:6379
      - PROMETHEUS_URL=http://prometheus:9090
      - RAZORPAY_KEY=your-razorpay-key
      - RAZORPAY_SECRET=your-razorpay-secret
      - PORT=3000
    depends_on:
      - db
      - redis
      - prometheus

  db:
    image: postgres
    container_name: product-selling-platform-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=productdb
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis
    container_name: product-selling-platform-redis
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus
    container_name: product-selling-platform-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

volumes:
  pgdata:


networks:
  app-network:
    driver: bridge
